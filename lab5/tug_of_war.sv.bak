module centerLight (Clock, Reset, L, R, NL, NR, lightOn);
input logic Clock, Reset;
// L is true when left key is pressed, R is true when the right key
// is pressed, NL is true when the light on the left is on, and NR
// is true when the light on the right is on.
input logic L, R, NL, NR;
// when lightOn is true, the center light should be on.
output logic lightOn;
// Your code goes here!!
enum{none, lf_on, rtl_on} ps, ns;

and to_lft(lf,L,~R)
and to_rt(rt,~L,R)
and na(hold,~L,~R)

always_comb begin
	case(ps)
		none: if(hold)ns = none;
							
							
				else if(to_lft)ns = left;
									  
									  
				else ns = right;
						
		
		left: if(hold)ns = none;
							
							
				else if(to_lft)ns = left;
									  
									  
				else ns = right;
				
		
		right:if(hold)ns = none;
							
							
				else if(to_lft)ns = left;
									  
									  
				else ns = right;
				
	endcase
	
always_comb begin
	case(ps)
		none: out = 2'b11;
		left: out = 2'b10;
		right:out = 2'b01;
	endcase
	
enum{led1,led2,led3,led4,led5,led6,led7,led8,led9,win1,win2}
	case(ps)
		led1: if(out == 2'b11) ns = led1;
				else if(out == 2'b01) ns = win1;
				else if(out == 2'b10) ns = led2;
				
		led2: if(out == 2'b11) ns = led2;
				else if(out == 2'b01) ns = led1;
				else if(out == 2'b10) ns = led3;
				
		led3: if(out == 2'b11) ns = led3;
				else if(out == 2'b01) ns = led2;
				else if(out == 2'b10) ns = led4;
				
		led4: if(out == 2'b11) ns = led4;
				else if(out == 2'b01) ns = led3;
				else if(out == 2'b10) ns = led5;
				
		led5: if(out == 2'b11) ns = led5;
				else if(out == 2'b01) ns = led4;
				else if(out == 2'b10) ns = led6;
				
		led6: if(out == 2'b11) ns = led6;
				else if(out == 2'b01) ns = led5;
				else if(out == 2'b10) ns = led7;
			
		led7: if(out == 2'b11) ns = led7;
				else if(out == 2'b01) ns = led6;
				else if(out == 2'b10) ns = led8;
				
		led8: if(out == 2'b11) ns = led8;
				else if(out == 2'b01) ns = led7;
				else if(out == 2'b10) ns = led9;
				
		led9: if(out == 2'b11) ns = led9;
				else if(out == 2'b01) ns = led8;
				else if(out == 2'b10) ns = win2;
			
		win1: ns = win1;
				
		win2: ns = win2;
	
	endcase
	
		
		
endmodule


module normalLight (Clock, Reset, L, R, NL, NR, lightOn);
input logic Clock, Reset;
// L is true when left key is pressed, R is true when the right key
// is pressed, NL is true when the light on the left is on, and NR
// is true when the light on the right is on.
input logic L, R, NL, NR;
// when lightOn is true, the normal light should be on.
output logic lightOn;
// Your code goes here!!
endmodule